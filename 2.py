"""Problem 2: Even Fibonacci Numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with **1** and **2**, the first terms will be: **1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...*** By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def even_fibonacci_numbers(max: int) -> int:
    """Find the sum of all even Fibonacci numbers below 4,000,000"""

    # Generate Fibonacci numbers
    fibonacci_numbers: list[int] = [1, 2]
    while True:
        new_fibonacci_number: int = fibonacci_numbers[-1] + fibonacci_numbers[-2]
        if new_fibonacci_number > max:
            break
        fibonacci_numbers.append(new_fibonacci_number)

    # Sum even Fibonacci numbers
    print(list(filter(lambda n: n % 2 == 0, fibonacci_numbers)))
    print(sum(filter(lambda n: n % 2 == 0, fibonacci_numbers)))


if __name__ == "__main__":
    even_fibonacci_numbers(100)
    even_fibonacci_numbers(4000000)
